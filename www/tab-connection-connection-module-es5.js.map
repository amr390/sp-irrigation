{"version":3,"sources":["webpack:///src/app/tab-connection/connection.page.html","webpack:///src/app/tab-connection/connection-routing.module.ts","webpack:///src/app/tab-connection/connection.module.ts","webpack:///src/app/tab-connection/connection.page.scss","webpack:///src/app/tab-connection/connection.page.ts"],"names":["routes","path","component","ConnectionPageRoutingModule","imports","forChild","exports","ConnectionPageModule","declarations","ConnectionPage","connectionService","alertController","savedConnections","plot","getPlot","checkStatus","subscribe","success","alert","create","cssClass","header","subHeader","message","buttons","present","selector","template"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACIf,UAAMA,MAAM,GAAW,CACrB;AACEC,YAAI,EAAE,EADR;AAEEC,iBAAS,EAAE;AAFb,OADqB,CAAvB;;UAWaC,2BAA2B;AAAA;AAAA,O;;AAA3BA,iCAA2B,6DAJvC,+DAAS;AACRC,eAAO,EAAE,CAAC,6DAAaC,QAAb,CAAsBL,MAAtB,CAAD,CADD;AAERM,eAAO,EAAE,CAAC,4DAAD;AAFD,OAAT,CAIuC,GAA3BH,2BAA2B,CAA3B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCIAI,oBAAoB;AAAA;AAAA,O;;AAApBA,0BAAoB,6DAVhC,+DAAS;AACRH,eAAO,EAAE,CACP,0DADO,EAEP,4DAFO,EAGP,0DAHO,EAIP,2GAJO,EAKP,sFALO,CADD;AAQRI,oBAAY,EAAE,CAAC,+DAAD;AARN,OAAT,CAUgC,GAApBD,oBAAoB,CAApB;;;;;;;;;;;;;;;;ACnBb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCYFE,cAAc;AAIzB,gCACUC,iBADV,EAEUC,eAFV,EAE0C;AAAA;;AADhC,eAAAD,iBAAA,GAAAA,iBAAA;AACA,eAAAC,eAAA,GAAAA,eAAA;AAJV,eAAAC,gBAAA,GAA4C,IAAI,oDAAJ,CAAoB,EAApB,CAA5C;AAME,eAAKC,IAAL,GAAY,KAAKH,iBAAL,CAAuBI,OAAvB,EAAZ;AACD;;AATwB;AAAA;AAAA,+CAYE;;;;;;;;AACzB,2BAAKJ,iBAAL,CAAuBK,WAAvB,CAAmC,KAAKF,IAAxC,EAA8CG,SAA9C,CAAwD,UAAOC,OAAP;AAAA,+BAAmB;AAAA;AAAA;AAAA;AAAA;AAAA;AACnEC,uCADmE,GAC3D,KAAKP,eAAL,CAAqBQ,MAArB,CAA4B;AACxCC,4CAAQ,EAAEH,OAAO,GAAG,eAAH,GAAqB,aADE;AAExCI,0CAAM,EAAEJ,OAAO,GAAG,YAAH,GAAkB,SAFO;AAGxCK,6CAAS,EAAEL,OAAO,GAAG,6BAAH,GAAmC,6BAHb;AAIxCM,2CAAO,EAAEN,OAAO,GAAG,gCAAH,GAAsC,kCAJd;AAKxCO,2CAAO,EAAE,CAAC,IAAD;AAL+B,mCAA5B,CAD2D;AAAA;AAQxE,yCAAMN,KAAN;;AARwE;AAAA,gDAQ3DO,OAR2D;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAnB;AAAA,uBAAxD;;;;;;;;;AAWD;AAxBwB;;AAAA;AAAA,S;;;;gBAPlB;;gBAJA;;;;AAWIhB,oBAAc,6DAL1B,gEAAU;AACTiB,gBAAQ,EAAE,gBADD;AAETC,gBAAQ,EAAR;AAAA;AAAA,0GAFS;;;;AAAA,OAAV,CAK0B,GAAdlB,cAAc,CAAd","file":"tab-connection-connection-module-es5.js","sourcesContent":["export default \"<ion-header [translucent]=\\\"true\\\">\\n  <ion-toolbar>\\n    <ion-title>\\n      Datos de la conexión\\n    </ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content [fullscreen]=\\\"true\\\">\\n  <ion-row>\\n    <ion-col class=\\\"connection-col\\\">\\n      <ion-thumbnail class=\\\"connection-image\\\">\\n        <img src=\\\"/assets/shapes.svg\\\">\\n      </ion-thumbnail>\\n      <ion-text color=\\\"dark\\\">\\n        <h2 class=\\\"connection-host\\\">Detalles de la parcela</h2>\\n      </ion-text>\\n\\n      <ion-list>\\n        <ion-item>\\n          <ion-label position=\\\"stacked\\\">Nombre de dominio o IP</ion-label>\\n          <ion-input color=\\\"primary\\\" [(ngModel)]=\\\"plot.host\\\"></ion-input>\\n        </ion-item>\\n        <ion-item>\\n          <ion-label position=\\\"stacked\\\">Puerto</ion-label>\\n          <ion-input color=\\\"primary\\\" [(ngModel)]=\\\"plot.port\\\"></ion-input>\\n        </ion-item>\\n      </ion-list>\\n    </ion-col>\\n  </ion-row>\\n  <ion-row>\\n    <ion-col class=\\\"connection-col\\\">\\n      <ion-list *ngFor=\\\"let channel of plot.channels\\\">\\n        <ion-item><ion-icon slot=\\\"start\\\" name=\\\"leaf-outline\\\"></ion-icon> <ion-label position=\\\"stacked\\\">{{channel.name}}</ion-label></ion-item>\\n      </ion-list>\\n    </ion-col>\\n  </ion-row>\\n\\n  <ion-footer>\\n    <ion-toolbar class=\\\"connection-col\\\">\\n        <ion-button expand=\\\"block\\\" color=\\\"primary\\\" (click)=\\\"validateConnection()\\\">\\n          <ion-icon slot=\\\"icon-only\\\" name=\\\"flash-outline\\\"></ion-icon>\\n        </ion-button>\\n    </ion-toolbar>\\n  </ion-footer>\\n \\n</ion-content>\";","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ConnectionPage } from './connection.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ConnectionPage,\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ConnectionPageRoutingModule {}\n","import { IonicModule } from '@ionic/angular';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { ConnectionPage } from './connection.page';\nimport { ExploreContainerComponentModule } from '../explore-container/explore-container.module';\n\nimport { ConnectionPageRoutingModule } from './connection-routing.module';\n\n@NgModule({\n  imports: [\n    IonicModule,\n    CommonModule,\n    FormsModule,\n    ExploreContainerComponentModule,\n    ConnectionPageRoutingModule\n  ],\n  declarations: [ConnectionPage]\n})\nexport class ConnectionPageModule {}\n","export default \"ion-toolbar {\\n  --background: rgb(0, 100, 42) !important;\\n  --color: white;\\n  text-align: center;\\n}\\n\\nion-content {\\n  --background: #fff url('sprinkler.svg') no-repeat center center / cover !important;\\n  --padding-top: 16px;\\n}\\n\\nion-content .connection-col {\\n  --ion-grid-column-padding: 0px;\\n}\\n\\nion-content .connection-image {\\n  --size: 100px;\\n  margin: auto;\\n}\\n\\nion-content .connection-host {\\n  background-color: rgba(61, 83, 66, 0.8);\\n  color: #c7e4c2;\\n  font-style: lato bold;\\n  text-align: center;\\n}\\n\\nion-icon[name=heart] {\\n  fill: grey;\\n}\\n\\nion-icon[name=heart].fav {\\n  fill: red;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdGFiLWNvbm5lY3Rpb24vY29ubmVjdGlvbi5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSx3Q0FBQTtFQUNBLGNBQUE7RUFDQSxrQkFBQTtBQUNKOztBQUVBO0VBQ0Usa0ZBQUE7RUFDQSxtQkFBQTtBQUNGOztBQUNFO0VBQ0UsOEJBQUE7QUFDSjs7QUFFRTtFQUNFLGFBQUE7RUFDQSxZQUFBO0FBQUo7O0FBR0U7RUFDRSx1Q0FBQTtFQUNBLGNBQUE7RUFDQSxxQkFBQTtFQUNBLGtCQUFBO0FBREo7O0FBUUU7RUFDRSxVQUFBO0FBTEo7O0FBUUU7RUFDRSxTQUFBO0FBTkoiLCJmaWxlIjoic3JjL2FwcC90YWItY29ubmVjdGlvbi9jb25uZWN0aW9uLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbImlvbi10b29sYmFyIHtcbiAgICAtLWJhY2tncm91bmQ6IHJnYigwLCAxMDAsIDQyKSAhaW1wb3J0YW50O1xuICAgIC0tY29sb3I6IHdoaXRlO1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cblxuaW9uLWNvbnRlbnQge1xuICAtLWJhY2tncm91bmQ6ICNmZmYgdXJsKFwiLi4vLi4vYXNzZXRzL3Nwcmlua2xlci5zdmdcIikgbm8tcmVwZWF0IGNlbnRlciBjZW50ZXIgLyBjb3ZlciAhaW1wb3J0YW50O1xuICAtLXBhZGRpbmctdG9wOiAxNnB4O1xuXG4gIC5jb25uZWN0aW9uLWNvbCB7XG4gICAgLS1pb24tZ3JpZC1jb2x1bW4tcGFkZGluZzogMHB4O1xuICB9XG5cbiAgLmNvbm5lY3Rpb24taW1hZ2Uge1xuICAgIC0tc2l6ZTogMTAwcHg7XG4gICAgbWFyZ2luOiBhdXRvO1xuICB9XG5cbiAgLmNvbm5lY3Rpb24taG9zdCB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSg2MSwgODMsIDY2LCAwLjgpO1xuICAgIGNvbG9yOiByZ2IoMTk5LCAyMjgsIDE5NCk7XG4gICAgZm9udC1zdHlsZTogbGF0byBib2xkO1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgfVxufVxuXG5cbmlvbi1pY29uIHtcbiAgLy8gZGVmYXVsdDogbm90LWZhdlxuICAmW25hbWU9XCJoZWFydFwiXSB7XG4gICAgZmlsbDogZ3JleTtcbiAgfVxuXG4gICZbbmFtZT1cImhlYXJ0XCJdLmZhdiB7XG4gICAgZmlsbDogcmVkO1xuICB9XG59XG4iXX0= */\";","import { Component } from '@angular/core';\nimport { AlertController } from '@ionic/angular';\nimport { BehaviorSubject } from 'rxjs';\n\nimport { Plot, Channel } from '../models/plot';\nimport { ConnectionService } from '../services/connection.service';\n\n@Component({\n  selector: 'app-connection',\n  templateUrl: 'connection.page.html',\n  styleUrls: ['connection.page.scss']\n})\nexport class ConnectionPage {\n  public plot: Plot;\n  savedConnections: BehaviorSubject<Plot[]> = new BehaviorSubject([]);\n\n  constructor(\n    private connectionService: ConnectionService,\n    private alertController: AlertController\n  ) {\n    this.plot = this.connectionService.getPlot();\n  }\n\n\n  async validateConnection() {\n    this.connectionService.checkStatus(this.plot).subscribe(async (success) => {\n      const alert = this.alertController.create({\n        cssClass: success ? 'alert-success' : 'alert-error',\n        header: success ? 'Correcto!!' : 'Fallo!!',\n        subHeader: success ? 'Prueba de conexión correcta' : 'La prueba de conexión falló',\n        message: success ? 'Conexión establecida con éxito' : 'Fallo al establecer una conexión',\n        buttons: ['OK']\n      });\n      (await alert).present();\n    }\n    );\n  }\n\n}\n"]}